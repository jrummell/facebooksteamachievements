name: 9.1.$(Rev:r)

jobs:
- job: Job_1
  displayName: Agent job 1

  pool:
    name: Default

  steps:
  - checkout: self
    clean: true

  - task: UseDotNet@2
    displayName: Use .Net Core sdk 3.1
    inputs:
      version: 3.1.x

  - task: UseDotNet@2
    displayName: Use .Net Core sdk 5.x
    inputs:
      version: 5.x

  - task: SonarCloudPrepare@1
    displayName: Prepare analysis on SonarCloud
    inputs:
      SonarCloud: 'https://sonarcloud.io/organizations/jrummell-github/'
      organization: 'jrummell-github'
      scannerMode: 'MSBuild'
      projectKey: 'jrummell_facebooksteamachievements'
      projectVersion: '$(Build.BuildNumber)'

  - task: DownloadSecureFile@1
    displayName: Download .env.staging
    inputs:
      secureFile: .env.staging
      retryCount: 5
  - task: DownloadSecureFile@1
    displayName: Download .env.production
    inputs:
      secureFile: .env.production
      retryCount: 5

  - task: CopyFiles@2
    displayName: 'Copy .env Files to: SteamAchievements.Web.Spa\app'
    inputs:
      SourceFolder: $(Agent.TempDirectory)
      Contents: '**\.env.*'
      TargetFolder: SteamAchievements.Web.Spa\app

  - task: DotNetCoreCLI@2
    displayName: dotnet build
    inputs:
      projects: '**/*.csproj'
      arguments: --configuration $(BuildConfiguration)

  - task: DotNetCoreCLI@2
    displayName: 'dotnet ef migrations script'
    inputs:
      command: 'custom'
      custom: 'ef'
      arguments: 'migrations script --output $(Build.ArtifactStagingDirectory)\migrate.sql --context SteamContext --idempotent --startup-project ..\SteamAchievements.Web.Spa --configuration $(BuildConfiguration)'
      workingDirectory: 'SteamAchievements.Data'


  - task: DotNetCoreCLI@2
    displayName: dotnet test
    inputs:
      command: test
      projects: '**/*.Test*.csproj'
      arguments: --configuration $(BuildConfiguration)

  - script: yarn install
    displayName: yarn install
    workingDirectory: SteamAchievements.Web.Spa\app

  - script: yarn build
    displayName: yarn build
    workingDirectory: SteamAchievements.Web.Spa\app

  - task: DotNetCoreCLI@2
    displayName: dotnet publish
    inputs:
      command: publish
      arguments: --configuration $(BuildConfiguration) --no-restore
      configurationToPack: $(BuildConfiguration)
  - task: CopyFiles@2
    displayName: 'Copy Files to staging'
    condition: succeededOrFailed()
    inputs:
      SourceFolder: $(build.sourcesdirectory)
      Contents: '**\*.zip'
      TargetFolder: $(build.artifactstagingdirectory)

  - task: PublishBuildArtifacts@1
    displayName: publish artifacts
    
  - task: SonarCloudAnalyze@1
    displayName: Run Code Analysis
  - task: SonarCloudPublish@1
    displayName: Publish Quality Gate Result
